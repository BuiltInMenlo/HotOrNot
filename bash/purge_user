#!/bin/bash


#-- check for username param
if [ ! ${!#} ]; then 
	exit 1;
else username="${!#}"; fi

#-- set tier to live
subdomain_api="admin"
while getopts "s" optname # --//> there's a '-s'
	do # --/ loop thru the params
		case "$optname" in

		"s") # )-/> passed in '-s'
			#-- set tier to stage
			subdomain_api="admin-stage"
			;;

		"?") # )-/> anything else
			echo "Unknown option $OPTARG"
			exit 1;
			;;

		":") # )-/> no arg
			echo "No argument value for option $OPTARG"
			exit 1;
			;;

		*) # )-/> shouldn't occur
			echo "Unknown error"
			exit 1;
			;;
	esac
done


 #-- api attribs
block_url="http://${subdomain_api}.letsvolley.com/admin/block_user.php"
wipe_url="http://${subdomain_api}.letsvolley.com/admin/wipe_user.php"
login_api="volley:\$uper\$mack"


# call block user
printf "Blocking user '%s' from (%s.letsvolley.com)... " "${username}" "${subdomain_api}"
result=$(curl --request POST --location "${block_url}" --user "${login_api}" --data-urlencode "username=${username}" --silent | sed -E 's/\<(\/)?pre\>//g' | grep --max-count 1 --only-matching "${username}")

#-- check for user json
if [ -n "$result" ]; then echo "Completed!"
	
	# call wipe user
	printf "Wiping user '%s' from (%s.letsvolley.com)... " "${username}" "${subdomain_api}"
	result=$(curl --request POST --location "${wipe_url}" --user "${login_api}" --data-urlencode "username=${username}" --silent | sed -E 's/\<(\/)?pre\>//g' | grep --max-count 1 --only-matching "${username}")

	#-- check for user json
	if [ -n "$result" ]; then echo "Completed!" ; else echo "Not found!"; fi
else echo "Not found!"; fi


#-- exit w/o error
exit 0;




#// dev
#-- http://api-stage.letsvolley.com/admin/wipe_user.php

#// live
#-- http://admin.letsvolley.com/admin/wipe_user.php


#// not found result
#-- result="Array ( [0] => blocking: [1] => BIM_Model_User Object ( ) )"
